apply plugin: "java-test-fixtures"

components.java.withVariantsFromConfiguration(configurations.testFixturesApiElements) { skip() }
components.java.withVariantsFromConfiguration(configurations.testFixturesRuntimeElements) { skip() }

dependencies {
  implementation project(':logging-util')

  implementation "com.fasterxml.jackson.core:jackson-databind"
  implementation "com.google.guava:guava:${guavaVersion}"
  implementation ("com.helger:ph-schematron:${phSchematronVersion}") { exclude group: "com.helger", module: "ph-jaxb-pom" }

  implementation "net.sf.saxon:Saxon-HE:${saxonVersion}"

  implementation "org.apache.commons:commons-csv:${commonsCsvVersion}"
  implementation "org.springframework:spring-oxm"
  implementation "org.springframework:spring-context"

  implementation "se.inera.intyg.clinicalprocess.healthcond.certificate:intyg-clinicalprocess-healthcond-certificate-schemas:${intygClinicalprocessSchemasVersion}"
  implementation "se.inera.intyg.clinicalprocess.healthcond.certificate:intyg-clinicalprocess-healthcond-certificate-schematron:${intygClinicalprocessSchematronVersion}"
  implementation "se.inera.intyg.schemas:schemas-contract:${schemasContractVersion}"
  implementation "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"

  compileOnly 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  testImplementation "org.assertj:assertj-core"
  testFixturesImplementation "org.junit.jupiter:junit-jupiter-api"
  testFixturesImplementation "org.junit.jupiter:junit-jupiter-params"
  testFixturesImplementation "org.mockito:mockito-junit-jupiter"
  testFixturesImplementation "org.mockito:mockito-core"
}
